{{- $service_name := "decider-media-project-cybersportscore-api" -}}
{{- $service_path := "/var/www/app" -}}

project: {{ $service_name }}
configVersion: 1.0

---
artifact: composer-vendors
from: eu.gcr.io/gt-project-384708/base/bullseye-php8.1-fpm-base:latest
git:
  - to: {{ $service_path }}
    owner: uploader
    group: www-data
    excludePaths:
      - ".git"
      - ".gitignore"
      - ".env"
      - ".env.*"
      - ".ci"
      - ".helm"
      - "werf.yaml"
      - "Makefile"
      - "make-vars.mk"
    stageDependencies:
      setup:
        - "composer.json"
ansible:
  install:
    - name: Allow release-info to change for APT repositories
      command: apt-get update -y --allow-releaseinfo-change
    - name: Create composer cache directory
      file:
        state: directory
        path: /root/.composer/cache
        mode: '0775'
    - name: Update Composer
      command: composer self-update --2
  setup:
    - name: Install composer deps
      command:
        chdir: {{ $service_path }}
        cmd: 'composer install --no-progress --no-interaction --no-dev --optimize-autoloader'

---
image: {{ $service_name }}-front
from: eu.gcr.io/gt-project-384708/base/bullseye-nginx-base:latest
git:
  - to: {{ $service_path }}
    owner: uploader
    group: www-data
    includePaths:
      - "public"
      - "resources"
      - "storage"
    stageDependencies:
      setup:
        - '**/*'
ansible:
  beforeInstall:
    - name: Allow release-info to change for APT repositories
      command: apt-get update -y --allow-releaseinfo-change
  install:
    - name: Install packages
      apt:
        update_cache: yes
        state: latest
        install_recommends: no
        name:
          - nginx-extras
          - libnginx-mod-http-geoip
          - geoip-database
          - libgeoip1
    - name: Download libnginx-mod-http-naxsi
      get_url:
        url: "https://github.com/nbs-system/naxsi/releases/download/1.3/debian-bullseye-libnginx-mod-http-naxsi_1.3_amd64.deb"
        dest: "/tmp/libnginx-mod-http-naxsi.deb"
    - name: Install libnginx-mod-http-naxsi
      apt:
        deb: "/tmp/libnginx-mod-http-naxsi.deb"
  setup:
    - name: Copy nginx.conf
      copy:
        content: |
          {{- "\n" }}
          {{- .Files.Get ".ci/nginx/nginx.conf" | indent 10 }}
        dest: /etc/nginx/nginx.conf
    - name: Copy default.conf
      copy:
        content: |
          {{- "\n" }}
          {{- .Files.Get ".ci/nginx/default.conf" | indent 10 }}
        dest: /etc/nginx/conf.d/default.conf
    - name: Copy common.conf
      copy:
        content: |
          {{- "\n" }}
          {{- .Files.Get ".ci/nginx/common.conf" | indent 10 }}
        dest: /etc/nginx/conf.d/common.conf
    - name: Copy fastcgi_params.conf
      copy:
        content: |
          {{- "\n" }}
          {{- .Files.Get ".ci/nginx/fastcgi_params.conf" | indent 10 }}
        dest: /etc/nginx/conf.d/fastcgi_params.conf
    - name: Copy naxsi.conf
      copy:
        content: |
          {{- "\n" }}
          {{- .Files.Get ".ci/nginx/naxsi.conf" | indent 10 }}
        dest: /etc/nginx/naxsi.include.conf
    - name: Copy naxsi.rules
      copy:
        content: |
          {{- "\n" }}
          {{- .Files.Get ".ci/nginx/naxsi.rules" | indent 10 }}
        dest: /etc/nginx/conf.d/naxsi.conf
    - name: Copy geoip.conf
      copy:
        content: |
            {{- "\n" }}
            {{- .Files.Get ".ci/nginx/geoip.conf" | indent 10 }}
        dest: /etc/nginx/conf.d/geoip.conf

    - name: Create tmp directory
      file:
        state: directory
        path: {{ $service_path }}/tmp
        mode: '0775'
    - name: Change minio namespace
      replace:
        path: /etc/nginx/conf.d/default.conf
        regexp: 'NAMESPACE_PLACEHOLDER'
        replace: {{ .namespace }}

docker:
  WORKDIR: {{ $service_path }}

---
image: {{ $service_name }}-back
from: eu.gcr.io/gt-project-384708/base/bullseye-php8.1-fpm-base:latest
import:
  - artifact: composer-vendors
    after: install
    add: {{ $service_path }}/vendor
    to: {{ $service_path }}/vendor
    owner: uploader
    group: www-data
git:
  - to: {{ $service_path }}
    owner: uploader
    group: www-data
    excludePaths:
      - ".git"
      - ".gitignore"
      - ".env"
      - ".env.*"
      - ".ci"
      - ".helm"
      - "werf.yaml"
      - "Makefile"
      - "make-vars.mk"
    stageDependencies:
      setup:
        - '**/*'
ansible:
  beforeInstall:
    - name: Allow release-info to change for APT repositories
      command: apt-get update -y --allow-releaseinfo-change
  install:
    - name: Install PHP and modules
      apt:
        update_cache: yes
        state: latest
        install_recommends: no
        name:
          - php8.1-mysql
          - php8.1-redis
  setup:
    - name: Create apps directories
      file:
        state: directory
        path: "{{`{{ item }}`}}"
        mode: '0775'
        owner: uploader
        group: www-data
        recurse: yes
      loop:
        - {{ $service_path }}/storage/logs
        - {{ $service_path }}/storage/framework/sessions
        - {{ $service_path }}/storage/framework/views
        - {{ $service_path }}/storage/framework/cache
        - {{ $service_path }}/bootstrap/cache
docker:
  WORKDIR: {{ $service_path }}
